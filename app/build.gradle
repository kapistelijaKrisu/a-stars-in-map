plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'idea'

}

sourceCompatibility = '1.11'
targetCompatibility = '1.11'
version = '1.3.0'

application {
    mainClassName = "app.Main"
}

jar {
    manifest {
        attributes "Main-Class": mainClassName
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

run{
    standardInput = System.in
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect() {
            fileTree(dir: it, exclude: [
                    'app/Main.class',
                    'system_tools/SystemSpecReader.class',
                    'file_operations/map_reader/MapLocator.class',
                    'file_operations/RootFolderFinder.class',
                    'file_operations/analysis_writer/AnalysisWriter.class'
            ])
        })
    }
}

repositories {
    mavenCentral()
    maven { url "https://dl.bintray.com/mockito/maven" }
}

dependencies {
    //oshi dependency, fails regardless if using windows and it's not in english
    //if u do have an english windows and error logs annoy you, uncomment this
    //error is about failing to read some registrys that we are not using anyway
    //compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'

    //getting cpu and os
    implementation 'com.github.oshi:oshi-core:3.13.0'

    testCompile "org.mockito:mockito-core:+"
    testCompile "org.mockito:mockito-inline:+"
    testCompileOnly(
            'junit:junit:4.12'
    )
    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.1.0'
    )
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.1.0',
            'org.junit.vintage:junit-vintage-engine:5.1.0'
    )

}
